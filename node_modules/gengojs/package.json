{
  "name": "gengojs",
  "version": "1.0.0-alpha.3",
  "description": "the best i18n middleware for Node.js",
  "main": "./express/",
  "scripts": {
    "test": "gulp test"
  },
  "dependencies": {
    "app-root-path": "^1.0.0",
    "babel": "^5.8.23",
    "gengojs-core": "^0.3.18",
    "gengojs-default-pack": "^1.1.1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gengojs/gengojs.git"
  },
  "keywords": [
    "i18n",
    "L10n",
    "translate",
    "gengo",
    "international",
    "express"
  ],
  "author": {
    "name": "iwatakeshi"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/gengojs/gengojs/issues"
  },
  "homepage": "http://gengojs.com",
  "devDependencies": {
    "chai": "^3.3.0",
    "cookie-parser": "^1.4.0",
    "express": "*",
    "express-subdomain": "^1.0.4",
    "gulp": "^3.9.0",
    "gulp-babel": "^5.2.1",
    "gulp-changelog": "^1.0.0",
    "gulp-gh-pages": "^0.5.2",
    "gulp-jsbeautify": "^0.1.1",
    "gulp-jshint": "^1.11.2",
    "gulp-mocha": "^2.1.3",
    "gulp-shell": "^0.5.0",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-spawn-mocha": "^2.2.1",
    "hapi": "^10.4.1",
    "intl": "*",
    "jade": "^1.11.0",
    "jshint-stylish": "^2.0.1",
    "koa": "^1.0.0",
    "koa-jade-render": "0.1.0",
    "koa-route": "^2.4.2",
    "koa-router": "^5.2.3",
    "koa-session": "^3.3.1",
    "lodash": "^3.10.1",
    "mocha": "^2.3.3",
    "node-version": "^1.0.0",
    "rimraf": "^2.4.3",
    "semver": "^5.0.3",
    "subdomain": "^1.2.0",
    "supertest": "^1.1.0",
    "vision": "^3.0.0"
  },
  "readme": "gengo.js  \n========\n\n[![Join the chat at https://gitter.im/gengojs/gengojs](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/gengojs/gengojs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https://travis-ci.org/gengojs/gengojs.svg?branch=master)](https://travis-ci.org/gengojs/gengojs)\n[![Dependency Status](https://david-dm.org/gengojs/gengojs.svg)](https://github.com/gengojs/gengojs/blob/master/package.json)\n[![License Status](http://img.shields.io/npm/l/gengojs.svg)](https://github.com/gengojs/gengojs/blob/master/LICENSE) \n[![Downloads](http://img.shields.io/npm/dm/gengojs.svg)]() \n[![Version](http://img.shields.io/npm/v/gengojs.svg)]()\n\n\n## News\n\nHey! Sorry for any delays! gengo.js has been through some transitions and hopefully it will lead it to becoming a better library but here's what happened:\n* gengo.js has moved into [a dedicated GitHub account](https://github.com/gengojs)\n* All official plugins have been updated and can be found at the dedicated account.\n* All plugins and the core have been documented.\n\nIn the coming weeks I will be working on a revamped version of the website/documentation with the updated gengo.js. In the meantime,\nplease don't hesitate to create issues and/or contribute to this awesome open source project. And to let everyone know, **I am looking for maintainers**. This project isn't very big and shouldn't be difficult to understand on how it works, so if you are interested, feel free to DM me through Gitter or Twitter ([@iwatakeshi](https://twitter.com/iwatakeshi)). :)\n\n~~It's here! It's finally here! Welcome to version 1.0.0-alpha. As the version implies, this version of gengo is not production ready. It's published so that I can get some feedback and of course test it myself. In fact, I already have a couple of thoughts about bringing the core and the plugins into the same repo because individually maintaining them myself is a difficult task. In the meantime, feel free to try it out and report any bugs or suggestions. As far as docs are concerned, it may take a while for me to write as I try to organize everything up and make gengo.js simple enough to extend and make it the best i18n module for Node.~~\n\n## Introduction\n\n**gengo.js** is an i18n/l10n library that is powered by it's very small [core](https://github.com/gengojs/core). Along with the core, it is also managed by six [plugins](https://github.com/gengojs?utf8=%E2%9C%93&query=plugin). The combinations of the these create a powerful and a unique library that enables developers to take over the core and extend its capabilities. The core is essentialy an empty shell that provides the basics such as a way of accessing a plugin's options or the plugin itself. As a starter, begin hacking the core and the plugins to find out how you can develop your own plugins and create the ultimate combination to create the best i18n library for Node.js.\n\n## Sails.js\n\ngengo.js supports Sails **through the use of hooks**. Check out the repo of [sails-hook-gengojs](https://github.com/gengojs/sails-hook-gengojs) for documentation. \n\nFor an example use of the hook, run `npm i && sails lift` under `examples/sails/app/`.\n\n## Usage\n\n```javascript\n// Modules used in example\nvar path = require('path');\n\n// Options used in example\nvar options = {\n  parser: {\n    type: '*'\n  },\n  backend: {\n    directory: path.join(__dirname, '/config/locales/')\n  },\n  header: {\n    supported: ['en-US', 'ja']\n  }\n};\n\n// Express\nvar gengo = require('gengojs');\nvar app = require('express')();\n// Use gengo\napp.use(gengo(options));\n\n// Koa\nvar gengo = require('gengojs/koa');\nvar app = require('koa')();\n// Use gengo\napp.use(gengo(options));\n\n// Hapi\nvar server = new require('hapi').Server();\nvar gengo = require('../../hapi/');\n// Register gengo\nserver.register(gengo(options), function(error) {\n  if (error) console.log('an error occurred: ' + error);\n});\n\n```\n\n## Options\n\nThese are the complete options for the official plugins. Loading options is quite simple in gengo.js.\n\n```json\n{\n  \"api\" : {\n    \"global\": \"__\",\n    \"localize\": \"__l\"\n  },\n  \"backend\": {\n    \"directory\": \"./locales\",\n    \"extension\": \"json\",\n    \"prefix\": \"\",\n    \"cache\": true\n  },\n  \"header\": {\n    \"detect\": {\n      \"query\": false,\n      \"subdomain\": false,\n      \"url\": false,\n      \"cookie\": false,\n      \"header\": true\n    },\n    \"keys\": {\n      \"cookie\": \"locale\",\n      \"query\": \"locale\"\n    },\n    \"supported\": [\"en-US\"],\n    \"default\": \"en-US\"\n  },\n  \"parser\": {\n    \"type\": \"default\",\n    \"markdown\": {\n     \"enabled\": false,\n      \"html\": false,\n      \"xhtmlOut\": false,\n      \"breaks\": false,\n      \"langPrefix\": \"language-\",\n      \"linkify\": false,\n      \"typographer\": false,\n      \"quotes\": \"“”‘’\"\n    },\n    \"template\": {\n      \"enabled\": true,\n      \"open\": \"{{\",\n      \"close\": \"}}\"\n    },\n    \"sprintf\": { \"enabled\": true },\n    \"keywords\": {\n      \"default\": \"default\",\n      \"translated\": \"translated\",\n      \"global\": \"global\"\n    }\n  },\n  \"router\": { \"enabled\": false } \n}\n```\n\nThere are three file extensions supported:\n* JSON\n* YAML\n* JS\n\nEach plugin have their own defaults (if applicable) but to override them simply use one of the following ways:\n\n* Use a path to the options:\n\n```javascript\ngengo('path to options');\n```\n* Directly override the options:\n\n```javascript\ngengo({\n  \"parser\": {/* ... */}\n});\n```\n\n## Test\n\n```bash\n# make sure to install the node modules\nnpm install\n\n# run test\ngulp test\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "4ff3c8c20e3ac3857e9a63a8ad5ed96a79ad44a0",
  "_id": "gengojs@1.0.0-alpha.3",
  "_shasum": "6354aff2560c14dda31b440698c8500bdb81dbd5",
  "_from": "gengojs@>=1.0.0-alpha.3 <2.0.0"
}

h1#dictionary #{__("dictionary.heading.dictionary")}
    h3#setup
      strong Setup
p
  |While the setup is uber simple, there are a couple of ways to setup your dictionary.
  |When you are translating your default langauge, it is optional to have a dictionary
  |for the default iff you are using phrase notation (including bracket-phrase) for the entire site since gengo will
  |just return the phrase when the requested locale is the default langage.
br
pre.language-javascript
  code.
    //input
    __("Hello world")

    //dictionary locale = ja
    {
      "Hello World": ...
    }

    //requested locale = en-US
    //output --> "Hello World"

    //requested locale = ja
    //output --> ...
p
  |When you do use a special notations, you must* provide a <i>default</i> key and a <i>translated</i> key to your definition.
  |Therefore, the default keyword and the translated keyword are used to tell gengo that a default and translated phrase exists under
  |a special notation. Gengo will automatically lookup the the keywords but they can be specified using dot notation as well.
p
  |* If you do not provide the keys, gengo will do its best to figure out whether the subkey is a string. If so then
  |it will return the <i>string</i>. If it can't find any value, it will return <i>undefined</i>.

br
pre.language-javascript
  code.
    //input
    __("[hello.world]")
    //dictionary locale = en-US
    {
      "hello.world":{
        "default": "Hello World"
      }
    }
    //dictionary locale = ja
    {
      "hello.world":{
        "translated" : ...
      }
    }
    //requested locale = en-US
    //output --> Hello World

    //requested locale = ja
    //output --> ...

br
pre.language-javascript
  code.
    //input
    __("hello.world")
    //dictionary locale = en-US
    {
      "hello":{
        "world": {
          "default": "Hello World"
        }
      },
      //or
      "hello":{
        "world": "Hello World"
      }
    }
    //dictionary locale = ja
    {
      "hello":{
        "world":{
          "translated" : ...
        }
      },
      //or
      "hello":{
        "world": "Hello World"
      }
    }

    //requested locale = en-US
    //output --> Hello World

    //requested locale = ja
    //output --> ...

p
  |Gengo's goal is to organize your definitions. It is the reason why different notations exist so that for different circumstances
  |you can use either notation. Speaking of organization, lets talk about router. Router is a way to seperate your definitions
  |for specific routes. An example can be found in <a href="#router-bool">router</a>, but specifically lets talk about <i>universe</i>.
  |Universe* is a special key used in your dictionaries to let gengo know that any key/pair contained under <i>universe</i> can be
  |accessed throughout the routes. Meaning that whether the requested page is <i>index/some/page</i>, gengo will look into universe and
  |find the perfect match for the desired phrase. The is extremely useful when you have phrases that repetitively appear on every route.
p
  |* The default keyword is <i>gengo</i>. See <a href="keywords">keywords</a>.
pre.language-javascript
  code.
    //input
    __("navbar.home")

    //assume requested page = /index/some/page
    {
      "index": ...,
      "some":{
        "page": ...
      },
      //universe keyword
      "gengo":{
        "navbar":{
          "home":"Home"
        },
        //or
        "navbar":{
          "home": {
            "default": "Home" //I think you get the idea by now.
          }
        }
      }
    }

    //output --> "Home"
p
  |Ultimately, the setup of your dictionary depends on how you want to organize and access your definition.
  |Router is disabled by default since it is the safest way to retrieve your definitions without it,
  |but the cost is great with organization. Router is fairly a new idea but it is powerful for organization.
  |Given a fair amount of tools, the question will ultimately be, how will you gengo?

h1#kawari Kawari
p!= __("dictionary.heading.kawari")
br
pre.language-javascript
  code.
    //ja.js
    module.exports = {
        "Welcome to Gengo.js, %s": "%s, Gengo.jsへようこそ"
    };
h1#momentjs-and-numeraljs #{__("dictionary.heading.momnum")}
p!= __("dictionary.paragraph.momnum")
br
pre.language-jade
  code.
    extends layout

    block content
      h1= __(title)
      h2 \#{__("Gengo.jsへようこそ")}
      h4 \#{__('今日は%sです。', __.moment().format('dddd'))}
      h4 \#{__('%sを持っていません。', __.numeral(10000).format('$0,0.00'))}
      h4 \#{__('今日は%sです。', __.moment({locale:'ja'}).format('dddd'))}
      h4 \#{__('%sを持っていません。', __.numeral({locale:'ja'},10000).format('$0,0.00'))}
h1#cookies #{__("dictionary.heading.cookies")}
p
| #{__("dictionary.paragraph.cookies")}
br
pre.language-jade
  code.
    //index.jade
    extends layout

    block content
      h1= __(title)
      p \#{__("Gengo.jsへようこそ")}
      button(onclick="locale().set('ja');") Japanese
      button(onclick="locale().set('en_US');") English
      button(onclick="locale().reset();") Reset
      script.
          var locale = function(){
              return{
                  set: function(locale){
                      //#{__("dictionary.code.cookies.set")}
                      document.cookie = "locale=" + locale;
                      //#{__("dictionary.code.cookies.refresh")}
                      location.reload();
                  },
                  reset: function(){
                      //#{__("dictionary.code.cookies.reset")}
                      document.cookie = "locale=";
                      //#{__("dictionary.code.cookies.refresh")}
                      location.reload();
                  }
              };
          };
h1#markdown #{__("dictionary.heading.markdown")}
p
| #{__("dictionary.paragraph.markdown")}
br
pre.language-jade
  code.
    //index.jade
    extends layout

    block content
      //#{__("dictionary.code.markdown.caution")}
      p!= __("Welcome to [Gengo.js](http://gengojs.com)")
      p!= __("Welcome to [Gengo.js](http://gengojs.com)[blank]")
      p!= __("Welcome to [Gengo.js](http://gengojs.com)[self]")
h1#mustache #{__("dictionary.heading.mustache")}
p #{__("dictionary.paragraph.mustache")}
br
pre.language-jade
  code.
    //index.jade
    extends layout

    block content
      p \#{__("Welcome to {{gengojs}}", {gengojs:"Gengo.js"}})}

h1#api API
p!= __("reference.paragraph.api.note")
h4#input-string
  strong input (String, Object)
p!= __("reference.paragraph.input.return")
p!= __("reference.paragraph.input.description")
p!= __("reference.paragraph.input.object")
p #{__("reference.paragraph.input.example")}
p
.row
  .col-md-10
    pre.language-javascript
        code.
          //String
          __("String")
          //Object
          __({phrase: "String", locale:"String"})
          __({phrase: "String", locale:"String", count: "String" || Number})
    br
h7#input-notation
 strong #{__("reference.heading.notation")}
br
p!= __("reference.paragraph.input.notation")
pre.language-javascript
  code.
    /*#{__("reference.code.notation.phrase")}*/
    //key = 'You are cool!'
    __("You are cool!")
    /*#{__("reference.code.notation.bracket")}*/
    //key = 'navbar.home'
    __("[navbar.home]")
    /*#{__("reference.code.notation.brackdot")}*/
    //key= 'You are cool!' subkey= 'plural' subkey = 'something'
    __("[You are cool!].plural.something")
    /*#{__("reference.code.notation.dot")}*/
    //key = 'navbar' subkey = 'home'
    __("navbar.home")
h4#arg-string-object-array
  strong arg (String, Object, Array, Number)
p!= __("reference.paragraph.arg")
p
  br
  !=__("reference.paragraph.arg.footnote.one")
  br
  != __("reference.paragraph.arg.footnote.two")
  br
  != __("reference.paragraph.arg.footnote.three")
  br
  != __("reference.paragraph.arg.footnote.four")

pre.language-javascript
    code.

      /*n = 1*/
      __(..., "ja") //locale
      __(..., "World") || __(..., [...]) //sprintf
      __(..., "2") || __(..., 2) //count and/or sprintf
      //As mentioned earlier, it is not neccessary to specify all of the following,
      //but just what you want to do. Also, 'm' refers to the number of mustache keys for m > 1
      __(.., {sprintf: ..., locale: 'ja', count: 2, mustache_example: "John Doe",...m}) //Object

      /*n > 1*/
      __(..., "Hello", 2,"World!", 3,...n) //sprintf

h1#functions functions
h5#language
  strong language
pre.language-javascript
  code.
    gengo.language()
    __.language()
p #{__("reference.paragraph.language")}
h5#setLocale
  strong setLocale
pre.language-javascript
  code.
    setLocale('ja');
    setLocale(req, 'ja');
    req.setLocale('ja');
p #{__("reference.paragraph.locale.set")}

h5#getLocale
  strong getLocale
pre.language-javascript
  code.
    getLocale(); //--> ja
    getLocale(req); //--> ja
    req.getLocale(); //--> ja
p #{__("reference.paragraph.locale.get")}

hr
h1#config Configuration
h5#gengo-string
  strong global (Object)
p
  | #{__("reference.paragraph.gengo")}
  br
  | #{__("reference.def")}
  br
  pre.language-javascript
    code.
      global:{
        gengo:'__'
      }

      //example
      gengo.config({
        global:{gengo:'__g'} // --> __g(...)
      });

h5#directory-string
  strong directory (String)
p
  |#{__("reference.paragraph.directory")}
  br
  | #{__("reference.def")}
  br
  pre.language-javascript
    code.
      approot/locales

      //example
      gengo.config({
        directory: '/my-folder/locales/'
      });
      //approot
      //  |
      //  ---my-folder
      //       |
      //       --- locales
h5#debug-bool
  strong debug (Boolean, Array)
p
  != __("reference.paragraph.debug")
  br
  | #{__("reference.def")}
  br
  pre.language-javascript
    code.
      debug: false

      //example
      gengo.config({
        debug: ['warn', 'error']
      });

      /*developer usage
      var debug = require('./modules/utils.js').debug;
      debug(String, Object, Array, Number).info(String (optional))*/

h5#supported-array
  strong supported (Array)
p
  | #{__("reference.paragraph.supported")}
  br
  | #{__("reference.def")}
  br
  pre.language-javascript
    code.
      supported: ['en-US', 'en']
  br
p
  <span class="glyphicon glyphicon-warning-sign">
  </span>#{__("reference.glyphicon.supported")}

h5#default-string
  strong default (String)
p
  | #{__("reference.paragraph.def")}
  br
  | #{__("reference.def")}
  br
  pre.language-javascript
    code.
      default: 'en-US'
h5#router-bool
  strong router (Boolean)
p
  | #{__("reference.paragraph.router")}
  br
  | #{__("reference.def")}
  br
  pre.language-javascript
    code.
      router: false

      //example
      gengo.config(); //-->
      '/' || '/docs' ==
      {
        ...
      }

      gengo.config({router: true}); //-->
      //router: true
      '/' ==
        {
          "index": ...
        }

      '/docs' ==
      {
        "docs": ...
      }

      '/docs/v0.2' ==
      {
        "docs":
        {
          "v0.2":...
        }
      }
h5#file-extension
  strong extension (string)
p
  | #{__("reference.paragraph.extension")}
  br
  | #{__("reference.def")}
  br
  pre.language-javascript
    code.
      extension: 'js'

      //example
      gengo.config(); //-->
      //.js
      module.exports = {
        ...
      };

      gengo.config({extension:'json'}); //-->
      //.json
      {
        ...
      }
h5#keywords
  strong keywords (Object)
p
  | #{__("reference.paragraph.keywords")}
  ul
    li!= __("reference.paragraph.keywords.list.one")
    li!= __("reference.paragraph.keywords.list.two")
    li!= __("reference.paragraph.keywords.list.three")
    li!= __("reference.paragraph.keywords.list.four")
  br
  | #{__("reference.def")}
  br
  pre.language-javascript
    code.
      keywords: {
        default: 'default',
        translated: 'translated',
        universe: 'gengo',
        plural: 'plural'
      }

      //example
      gengo.config(); //-->

      //en-US.js
      {
        "something":{
            "default": ...,
            "plural": {
              "default": ...
            }
        }
      }

      //ja.js
      {
        "something":{
            "translated": ...,
            "plural": {
              "translated": ...
            }
        }
      }
      //router: true
      {
        "index": ...,
        "gengo": {
          ....
        }
      }


      gengo.config({
      keywords: {
        default: 'd',
        translated: 't',
        universe: 'g',
        plural: 'p'
      }}); //-->

      //en-US.js
      {
        "something":{
            "d": ...,
            "p": {
              "d": ...
            }
        }
      }

      //ja.js
      {
        "something":{
            "t": ...,
            "p": {
              "t": ...
            }
        }
      }
      //router: true
      {
        "index": ...,
        "g": {
          ....
        }
      }

h5#cookie
  strong cookie (String)
p
  | #{__('reference.paragraph.cookiename')}
  br
  | #{__("reference.def")}
  br
  pre.language-javascript
    code.
      cookie: 'locale'

      //example
      gengo.config({
        cookie: 'yourcookiename'
      });

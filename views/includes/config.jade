section
  .content
    h1#configuration Configuration
    p
    |To configure gengo, see the table below to know which data type for each option is accepted.
    hr
    .table-responsive
      table.table.table-hover
        thead
          tr
            th Data Type
            th Option
            th Description
            th Default
            th Example
        tbody
          tr
            td Object
            td global
            td Changes the global variable for gengo.
            td
              pre.language-javascript
                code.
                  global:{
                    gengo: "__"
                  };
            td
              pre.language-javascript
                code.
                  gengo.config(global:{
                    gengo: "__g"
                  });
          tr
            td String, Object
            td directory
            td
              |The path to your dictionary.
              |Note that all paths are automatically normalized and a root is appended but the root can be overridden.
            td
              pre.language-javascript
                code.
                  directory: root + "/locales"
            td
              pre.language-javascript
                code.
                  gengo.config({
                    directory: {
                      path: __dirname + "/my-folder/"
                    }
                  });

          tr
            td Boolean, Object Array
            td debug
            td
              |Outputs the debugging statements. Available types are info, warn, error, debug, and data. You may also
              |pass an object to add other settings.
            td
              pre.language-javascript
                code.
                  debug: false
            td
              pre.language-javascript
                code.
                  //Object
                  gengo.config({
                    debug:{
                      cout: ['warn', "error"],
                      timestamp:{
                        format: "hh:mm:ss"
                      }
                    }
                  });
                  //Array
                  gengo.config({
                    debug: ["warn", "error"]
                  });
    .note.panel.panel-info
      .panel-heading Note
      .panel-body
        |For more debugging options see <a href="https://www.github.com/iwatakeshi/cout" target="_blank">cout</a>.
    br
    .table-responsive
      table.table.table-hover
        tbody
        tr
          td String
          td default
          td The default locale for your app. It would normally be the locale in your native tongue.
          td
            pre.language-javascript
              code.
                default: "en-US"
          td
            pre.language-javascript
              code.
                gengo.config({
                  default: "ja"
                });
        tr
          td Array
          td supported
          td The supported locales for your app.
          td
            pre.language-javascript
              code.
                supported: ["en-US"]
          td
            pre.language-javascript
              code.
                gengo.config({
                  supported:["en-US", "ja", "fr", "en-gb"];
                });


    .note.panel.panel-info
      .panel-heading Note
      .panel-body
        |gengo.js is case-insensitive when setting the default locale and the supported locale but case-sensitive for file names.
        |This will reduce inconsistency for file naming and mistakes in the higher level (configuring) that may affect the lower level (file naming).
        br
        br
        |If you would like a case-insensitive file naming option, then please create an issue at GitHub.
    br
    .table-responsive
      table.table.table-hover
          tbody
            tr
              td Boolean
              td router
              td Enables you to organize your dictionary by route.
              td
                pre.language-javascript
                  code.
                    router: false
              td
                pre.language-javascript
                  code.
                    gengo.config({
                      router: true
                    })
    .note.panel.panel-info
      .panel-heading Note
      .panel-body
        |Setting up the routes in your dictionary is fairly easy. See Dictionary.
    br
    .table-responsive
      table.table.table-hover
        tbody
          tr
            td String
            td extension
            td Sets the file extension for your dictionary.
            td
              pre.language-javascript
                code.
                  extension: ".js"
            td
              pre.language-javascript
                code.
                  gengo.config({
                    extension: ".json"
                  });
          tr
            td Object
            td keywords
            td
              |Changes the keywords used for plural, default, translated, and universe.
              br
              br
              |See Dictionary for usage.
            td
              pre.language-javascript
                code.
                  keywords:{
                    plural: "plural",
                    default: "default",
                    translated: "translated",
                    universe: "gengo"
                  }
            td
              pre.language-javascript
                code.
                  gengo.config({
                    plural: "p",
                    default: "d",
                    translated: "t",
                    universe: "u"
                  });
          tr
            td String
            td cookie
            td Sets the default variable name for cookies.
            td
              pre.language-javascript
                code.
                  cookie: "locale"
            td
              pre.language-javascript
                code.
                  gengo.config({
                    cookie: "cookiename"
                  });
    h2 Sails.js
    p 
    |Configuring gengo.js in Sails.js is a breeze. You will need to modify the <code>http.js</code> file under
    |<code>sailsapp/config/</code>.
    h3 Example
    pre.language-javascript
      code.
        /**
         * HTTP Server Settings
         * (sails.config.http)
         *
         * Configuration for the underlying HTTP server in Sails.
         * Only applies to HTTP requests (not WebSockets)
         *
         * For more information on configuration, check out:
         * http://sailsjs.org/#/documentation/reference/sails.config/sails.config.http.html
         */
        var gengo = require('gengojs');
        gengo.config({
            directory: {
                path: __dirname + '/locales'
            },
            default: 'en-us',
            supported: ['en', 'es', 'fr', 'de'],
            extension: 'json',
            debug: ['warn', 'info']
        });
        
        module.exports.http = {
         
            /****************************************************************************
             *                                                                           *
             * Express middleware to use for every Sails request. To add custom          *
             * middleware to the mix, add a function to the middleware config object and *
             * add its key to the "order" array. The $custom key is reserved for         *
             * backwards-compatibility with Sails v0.9.x apps that use the               *
             * `customMiddleware` config option.                                         *
             *                                                                           *
             ****************************************************************************/
         
            middleware: {
         
                /***************************************************************************
                 *                                                                          *
                 * The order in which middleware should be run for HTTP request. (the Sails *
                 * router is invoked by the "router" middleware below.)                     *
                 *                                                                          *
                 ***************************************************************************/
                order: [
                    'startRequestTimer',
                    'cookieParser',
                    /*----*/
                    'gengo',
                    /*----*/
                    'session',
                    'bodyParser',
                    'handleBodyParserError',
                    'compress',
                    'methodOverride',
                    'poweredBy',
                    '$custom',
                    'router',
                    'www',
                    'favicon',
                    '404',
                    '500',
                ],
         
                /****************************************************************************
                 *                                                                           *
                 * Example custom middleware; logs each request to the console.              *
                 *                                                                           *
                 ****************************************************************************/
                gengo: gengo.init,
         
                /***************************************************************************
                 *                                                                          *
                 * The body parser that will handle incoming multipart HTTP requests. By    *
                 * default as of v0.10, Sails uses                                          *
                 * [skipper](http://github.com/balderdashy/skipper). See                    *
                 * http://www.senchalabs.org/connect/multipart.html for other options.      *
                 *                                                                          *
                 ***************************************************************************/
         
                // bodyParser: require('skipper')
         
            },
         
            /***************************************************************************
             *                                                                          *
             * The number of seconds to cache flat files on disk being served by        *
             * Express static middleware (by default, these files are in `.tmp/public`) *
             *                                                                          *
             * The HTTP static cache is only active in a 'production' environment,      *
             * since that's the only time Express will cache flat-files.                *
             *                                                                          *
             ***************************************************************************/
         
            // cache: 31557600000
        };